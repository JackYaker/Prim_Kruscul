from typing import *
from networkx import *
from matplotlib.pyplot import *



def prim(g: Graph) -> Graph:
    fg = Graph()
    node_list = []
    check: bool = True
    #edgs = sorted(g.edges, keys=g.edges.values(), reverse=True)
    for i in g.edges.items():
        print(i)
    while(check):

        tmp_int = [0, ("", "")]
        for e in g.edges.items():
            if tmp_int[0] > e[1]:
                tmp_int[0] = e[1]
                tmp_int[1] = e[0]

        if not(tmp_int[1][0] in node_list and tmp_int[1][1] in node_list):
            node_list.append(tmp_int[1][0]) if tmp_int[1][0] not in node_list else None
            node_list.append(tmp_int[1][1]) if tmp_int[1][1] not in node_list else None
            fg.add_edges_from(tmp_int[1], weight=tmp_int[0])
        else:
            check = False
    return fg



if __name__ == "__main__":
    citys =[
        ('Минск', 'Жодино', 67), ('Минск', 'Воложин', 78), ('Минск', 'Могилев', 208), ('Минск', 'Быхов', 225),
        ('Минск', 'Орша', 221), ('Минск', 'Витебск', 279), ('Минск', 'Полоцк', 227), ('Минск', 'Бешенковичи', 252),
        ('Минск', 'Гомель', 310), ('Минск', 'Чечерск', 287), ('Минск', 'Василевичи', 271), ('Минск', 'Брест', 350),
        ('Минск', 'Домачево', 290), ('Минск', 'Береза', 244), ('Минск', 'Гродно', 277), ('Минск', 'Лида', 186),
        ('Минск', 'Дятлово', 203), ('Жодино', 'Воложин', 145), ('Жодино', 'Могилев', 290), ('Жодино', 'Быхов', 260),
        ('Жодино', 'Орша', 280), ('Жодино', 'Витебск', 330), ('Жодино', 'Полоцк', 290), ('Жодино', 'Бешенковичи', 310),
        ('Жодино', 'Гомель', 370), ('Жодино', 'Чечерск', 350), ('Жодино', 'Василевичи', 340), ('Жодино', 'Брест', 410),
        ('Жодино', 'Домачево', 360), ('Жодино', 'Береза', 320), ('Жодино', 'Гродно', 340), ('Жодино', 'Лида', 250),
        ('Жодино', 'Дятлово', 270), ('Воложин', 'Могилев', 310), ('Воложин', 'Быхов', 290), ('Воложин', 'Орша', 300),
        ('Воложин', 'Витебск', 360), ('Воложин', 'Полоцк', 320), ('Воложин', 'Бешенковичи', 340), ('Воложин', 'Гомель', 400),
        ('Воложин', 'Чечерск', 380), ('Воложин', 'Василевичи', 370), ('Воложин', 'Брест', 430), ('Воложин', 'Домачево', 390),
        ('Воложин', 'Береза', 350), ('Воложин', 'Гродно', 250), ('Воложин', 'Лида', 150), ('Воложин', 'Дятлово', 180),
        ('Могилев', 'Быхов', 50), ('Могилев', 'Орша', 70), ('Могилев', 'Витебск', 200), ('Могилев', 'Полоцк', 280),
        ('Могилев', 'Бешенковичи', 230), ('Могилев', 'Гомель', 180), ('Могилев', 'Чечерск', 150), ('Могилев', 'Василевичи', 250),
        ('Могилев', 'Брест', 500), ('Могилев', 'Домачево', 450), ('Могилев', 'Береза', 400), ('Могилев', 'Гродно', 450),
        ('Могилев', 'Лида', 370), ('Могилев', 'Дятлово', 390), ('Быхов', 'Орша', 120), ('Быхов', 'Витебск', 250),
        ('Быхов', 'Полоцк', 320), ('Быхов', 'Бешенковичи', 280), ('Быхов', 'Гомель', 230), ('Быхов', 'Чечерск', 200),
        ('Быхов', 'Василевичи', 300), ('Быхов', 'Брест', 550), ('Быхов', 'Домачево', 500), ('Быхов', 'Береза', 450),
        ('Быхов', 'Гродно', 500), ('Быхов', 'Лида', 420), ('Быхов', 'Дятлово', 440), ('Орша', 'Витебск', 80),
        ('Орша', 'Полоцк', 200), ('Орша', 'Бешенковичи', 130), ('Орша', 'Гомель', 300), ('Орша', 'Чечерск', 270),
        ('Орша', 'Василевичи', 370), ('Орша', 'Брест', 620), ('Орша', 'Домачево', 570), ('Орша', 'Береза', 520),
        ('Орша', 'Гродно', 570), ('Орша', 'Лида', 490), ('Орша', 'Дятлово', 510), ('Витебск', 'Полоцк', 110),
        ('Витебск', 'Бешенковичи', 70), ('Витебск', 'Гомель', 480), ('Витебск', 'Чечерск', 450), ('Витебск', 'Василевичи', 550),
        ('Витебск', 'Брест', 700), ('Витебск', 'Домачево', 650), ('Витебск', 'Береза', 600), ('Витебск', 'Гродно', 650),
        ('Витебск', 'Лида', 570), ('Витебск', 'Дятлово', 590), ('Полоцк', 'Бешенковичи', 60), ('Полоцк', 'Гомель', 530),
        ('Полоцк', 'Чечерск', 500), ('Полоцк', 'Василевичи', 600), ('Полоцк', 'Брест', 750), ('Полоцк', 'Домачево', 700),
        ('Полоцк', 'Береза', 650), ('Полоцк', 'Гродно', 700), ('Полоцк', 'Лида', 620), ('Полоцк', 'Дятлово', 640),
        ('Бешенковичи', 'Гомель', 500), ('Бешенковичи', 'Чечерск', 470), ('Бешенковичи', 'Василевичи', 570), ('Бешенковичи', 'Брест', 720),
        ('Бешенковичи', 'Домачево', 670), ('Бешенковичи', 'Береза', 620), ('Бешенковичи', 'Гродно', 670), ('Бешенковичи', 'Лида', 590),
        ('Бешенковичи', 'Дятлово', 610), ('Гомель', 'Чечерск', 70), ('Гомель', 'Василевичи', 100), ('Гомель', 'Брест', 550),
        ('Гомель', 'Домачево', 500), ('Гомель', 'Береза', 450), ('Гомель', 'Гродно', 600), ('Гомель', 'Лида', 520),
        ('Гомель', 'Дятлово', 540), ('Чечерск', 'Василевичи', 130), ('Чечерск', 'Брест', 500), ('Чечерск', 'Домачево', 450),
        ('Чечерск', 'Береза', 400), ('Чечерск', 'Гродно', 550), ('Чечерск', 'Лида', 470), ('Чечерск', 'Дятлово', 490),
        ('Василевичи', 'Брест', 400), ('Василевичи', 'Домачево', 350), ('Василевичи', 'Береза', 300), ('Василевичи', 'Гродно', 450),
        ('Василевичи', 'Лида', 370), ('Василевичи', 'Дятлово', 390), ('Брест', 'Домачево', 60), ('Брест', 'Береза', 220),
        ('Брест', 'Гродно', 330), ('Брест', 'Лида', 250), ('Брест', 'Дятлово', 270), ('Домачево', 'Береза', 170),
        ('Домачево', 'Гродно', 280), ('Домачево', 'Лида', 200), ('Домачево', 'Дятлово', 220), ('Береза', 'Гродно', 200),
        ('Береза', 'Лида', 120), ('Береза', 'Дятлово', 140), ('Гродно', 'Лида', 110), ('Гродно', 'Дятлово', 130),
        ('Лида', 'Дятлово', 70)]
    pos = {'Брест': (-240, -240),'Дятлово': (-120, -72),'Жодино': (48, 48),'Лида': (-144, 0),'Гродно': (-216, -24),
           'Минск': (0, 0),'Домачево': (-240, -288),'Василевичи': (144, -216),'Чечерск': (240, -144),
           'Гомель': (240, -240),'Бешенковичи': (120, 168),'Полоцк': (72, 240),'Витебск': (216, 216),
            'Орша': (216, 120),'Быхов': (216, -48),'Могилев': (216, 0),'Береза': (-168, -192),'Воложин': (-72, 48)}

    graph = Graph()
    graph.add_weighted_edges_from(citys)
    options = {
        "font_size": 10,
        "node_size": 500,
        "node_color": "red",
        "edgecolors": "black",
        "linewidths": 2,
        "width": 2,
    }



    draw_networkx(graph, pos, with_labels=True, **options)
    edge_labels = get_edge_attributes(graph, 'weight')
    draw_networkx_edge_labels(graph, pos, edge_labels=edge_labels)
    margins(0.1)
    axis('off')
    show()

    prim_graph = prim(graph)
    draw_networkx(prim_graph, pos, with_labels=True, **options)
    edge_labels = get_edge_attributes(prim_graph, 'weight')
    draw_networkx_edge_labels(prim_graph, pos, edge_labels=edge_labels)
    margins(0.1)
    axis('off')
    show()








